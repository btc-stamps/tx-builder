name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Run Deno lint
        run: deno lint src/ scripts/ examples/

      - name: Check formatting
        run: deno fmt --check src/ scripts/ examples/

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npm run typecheck

  test-node:
    name: Test (Node.js)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '21']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          echo "Running tests..."
          npm test
          echo "✅ All tests passed successfully!"

      - name: Run test coverage
        if: matrix.node-version == '20'
        run: npm run test:coverage

      - name: Upload coverage
        if: matrix.node-version == '20'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  validate:
    name: Validate Examples & Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run validation script
        run: npm run validate
        continue-on-error: true # Since this might need network access

      - name: Test examples build
        run: npm run examples
        continue-on-error: true # Since examples might need network access

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "Build successful - dist directory contains:"
          ls -la dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, type-check, test-node, build]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## CI Pipeline Summary"
          echo ""
          echo "### Job Results:"
          echo "- Lint: ${{ needs.lint.result }}"
          echo "- Type Check: ${{ needs.type-check.result }}"
          echo "- Tests: ${{ needs.test-node.result }}"
          echo "- Build: ${{ needs.build.result }}"
          echo ""
          if [ "${{ needs.lint.result }}" = "success" ] && \
             [ "${{ needs.type-check.result }}" = "success" ] && \
             [ "${{ needs.test-node.result }}" = "success" ] && \
             [ "${{ needs.build.result }}" = "success" ]; then
            echo "✅ All CI checks passed!"
          else
            echo "❌ Some CI checks failed. Please review the logs above."
            exit 1
          fi
