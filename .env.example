# Configuration Examples for tx-builder
#
# üéØ IMPORTANT: tx-builder works out-of-the-box with ZERO CONFIGURATION!
# ‚úÖ Default behavior: Uses reliable, high-performance public ElectrumX servers
# ‚öôÔ∏è This file shows OPTIONAL overrides for advanced users and custom deployments
#
# Quick Start (NO configuration needed):
#   import { ElectrumXProvider } from '@btc-stamps/tx-builder';
#   const provider = new ElectrumXProvider(); // Uses public servers automatically!
#
# To customize (optional):
# 1. Copy this file to .env
# 2. Uncomment and configure values you want to override
# 
# Note: .env is gitignored and will not be committed to your repository

# ============================================================================
# ORDINALS & COUNTERPARTY DETECTION API CONFIGURATION
# ============================================================================

# Hiro Ordinals API (for detecting ordinals, inscriptions, and runes)
# Default: https://api.hiro.so
HIRO_API_BASE_URL=https://api.hiro.so
HIRO_API_TIMEOUT=5000
HIRO_API_MAX_RETRIES=3

# Ord Server API (for detecting inscriptions via ordinals.com)
# Default: https://ordinals.com
ORD_SERVER_BASE_URL=https://ordinals.com
ORD_SERVER_TIMEOUT=5000
ORD_SERVER_MAX_RETRIES=3

# Counterparty API (for detecting SRC-20 tokens and Bitcoin Stamps)
# Default: https://api.counterparty.io:4000
COUNTERPARTY_API_URL=https://api.counterparty.io:4000
COUNTERPARTY_TIMEOUT=5000
COUNTERPARTY_MAX_RETRIES=3

# Multi-Provider Detector Configuration
# Strategy options: 'first-success', 'any-positive', 'consensus'
DETECTOR_STRATEGY=first-success
DETECTOR_TIMEOUT=10000
DETECTOR_MAX_CONCURRENCY=2

# Example usage in code:
# const detector = new MultiProviderDetector(undefined, {
#   strategy: process.env.DETECTOR_STRATEGY || 'first-success',
#   timeout: parseInt(process.env.DETECTOR_TIMEOUT || '10000'),
#   providerOptions: {
#     hiro: {
#       baseUrl: process.env.HIRO_API_BASE_URL,
#       timeout: parseInt(process.env.HIRO_API_TIMEOUT || '5000')
#     },
#     ordServer: {
#       baseUrl: process.env.ORD_SERVER_BASE_URL,
#       timeout: parseInt(process.env.ORD_SERVER_TIMEOUT || '5000')
#     },
#     counterparty: {
#       apiUrl: process.env.COUNTERPARTY_API_URL,
#       timeout: parseInt(process.env.COUNTERPARTY_TIMEOUT || '5000')
#     }
#   }
# });

# ============================================================================
# ELECTRUMX CONFIGURATION (OPTIONAL - Public servers used by default)
# ============================================================================

# üéØ DEFAULT BEHAVIOR (zero configuration):
# - Mainnet: blockstream.info, fortress.qtornado.com, electrum1.bluewallet.io
# - Testnet: blockstream.info testnet, testnet.qtornado.com  
# - Regtest: localhost:50001
# - All servers are validated for performance and reliability
#
# ‚öôÔ∏è OVERRIDE ONLY if you need custom servers for:
# - Private/enterprise ElectrumX servers
# - Local development with custom regtest setup
# - Specific network requirements

# Network-specific server configuration (OPTIONAL override)
# Format: host:port:protocol,host:port:protocol
# Supported protocols: tcp, ssl, ws, wss

# Mainnet servers (overrides default public servers)
# ELECTRUMX_MAINNET_SERVERS=your-mainnet.server.com:50002:ssl,backup-mainnet.server.com:50002:ssl

# Testnet servers (overrides default public servers)
# ELECTRUMX_TESTNET_SERVERS=your-testnet.server.com:50002:ssl,backup-testnet.server.com:50002:ssl

# Regtest servers (for custom local development)
# ELECTRUMX_REGTEST_SERVERS=localhost:50001:tcp,127.0.0.1:50001:tcp

# Generic servers (fallback if network-specific not set)
# ELECTRUMX_SERVERS=your-generic.server.com:50002:ssl,backup.server.com:50002:ssl

# Connection settings (OPTIONAL - sensible defaults provided)
# ELECTRUMX_TIMEOUT=10000              # Connection and request timeout in ms (default: 10000)
# ELECTRUMX_MAX_RETRIES=3              # Maximum retry attempts (default: 3)
# ELECTRUMX_FALLBACK_TO_PUBLIC=true    # Use fallback servers if custom servers fail (default: true)

# Pool configuration (OPTIONAL performance optimization)
# ELECTRUMX_POOL_SIZE=3                # Maximum connections per server (default: 3, range: 1-20)
# ELECTRUMX_HEALTH_CHECK_INTERVAL=30000 # Health check interval in ms (default: 30000, range: 5000-300000)
# ELECTRUMX_CIRCUIT_BREAKER_THRESHOLD=5 # Failures before circuit breaker opens (default: 5, range: 1-20)

# Fee provider settings (OPTIONAL)
# ELECTRUMX_FALLBACK_FEE_RATE=10       # Fallback fee rate in sat/vB (default: 10, range: 1-1000)
# ELECTRUMX_FEE_CACHE_TIMEOUT=60       # Fee cache timeout in seconds (default: 60, range: 10-3600)

# Network selection (OPTIONAL - auto-detected from provider)
# TX_BUILDER_NETWORK=mainnet           # Network: mainnet, testnet, regtest (default: mainnet)

# ============================================================================
# LEGACY CONFIGURATION (Deprecated but supported for backwards compatibility)
# ============================================================================

# Option 1: Single endpoint (DEPRECATED - use ELECTRUMX_*_SERVERS above)
# ELECTRUMX_HOST=your-electrumx-server.com
# ELECTRUMX_PORT=50002
# ELECTRUMX_PROTOCOL=ssl

# Option 2: Multiple endpoints (DEPRECATED - use ELECTRUMX_*_SERVERS above)
# ELECTRUMX_ENDPOINTS=server1.com:50002:ssl,server2.com:50002:ssl

# Option 3: JSON configuration (DEPRECATED)
# TX_BUILDER_ELECTRUMX_CONFIG='[{"host":"your-server.com","port":50002,"protocol":"ssl","priority":0}]'

# Legacy network and timeout settings (DEPRECATED)
# TX_BUILDER_NETWORK=mainnet
# TX_BUILDER_CONNECTION_TIMEOUT=5000
# TX_BUILDER_REQUEST_TIMEOUT=30000
# TX_BUILDER_FALLBACK_TO_PUBLIC=true

# ============================================================================
# EXAMPLE CONFIGURATIONS (All examples override defaults)
# ============================================================================

# üè¢ Enterprise deployment with custom servers:
# ELECTRUMX_MAINNET_SERVERS="electrum.mycompany.com:50002:ssl,electrum-backup.mycompany.com:50002:ssl"
# ELECTRUMX_TESTNET_SERVERS="testnet-electrum.mycompany.com:50002:ssl"
# ELECTRUMX_TIMEOUT=15000
# ELECTRUMX_MAX_RETRIES=5
# ELECTRUMX_FALLBACK_TO_PUBLIC=false  # Only use your servers

# üõ†Ô∏è Local development with custom regtest:
# ELECTRUMX_REGTEST_SERVERS="localhost:50001:tcp"
# ELECTRUMX_FALLBACK_TO_PUBLIC=false  # Local only

# üîÄ Hybrid environment (custom mainnet, default public testnet):
# ELECTRUMX_MAINNET_SERVERS="private-mainnet.company.com:50002:ssl"
# ELECTRUMX_FALLBACK_TO_PUBLIC=true  # Uses public servers for testnet (since no ELECTRUMX_TESTNET_SERVERS set)

# üöÄ Zero-config deployment (DEFAULT - no .env needed):
# new ElectrumXProvider(); // Uses optimized public servers automatically!